---
version: '3.8'

services:
  traefik:
    image: "traefik:v2.2"
    command:
      # - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.keycloak.address=:8080"
      - "--entrypoints.traefik.address=:8081"
    ports:
      - "80:80"
      - "8080:8080"
      - "8081:8081"
      - "14268:14268"
    networks:
      - internal_net
      - external_net
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  jaeger:
    hostname: jaeger
    image: jaegertracing/all-in-one:1.19.2
    networks:
      - internal_net
    ports:
      - 5775:5775/udp 
      - 6831:6831/udp 
      - 6832:6832/udp 
      - 5778:5778 
      - 16686:16686 
      - 14268:14268 
      - 14250:14250 
      - 9411:9411 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jaeger.rule=Host(`jaeger`)"
      - "traefik.http.routers.jaeger.entrypoints=web"
      - "traefik.http.routers.jaeger.service=jaeger"
      - "traefik.http.services.jaeger.loadbalancer.server.port=16686"
      
      - "traefik.http.routers.jaeger-api.rule=Host(`jaeger-api`)"
      - "traefik.http.routers.jaeger-api.entrypoints=web"
      - "traefik.http.routers.jaeger-api.service=jaeger-api"
      - "traefik.http.services.jaeger-api.loadbalancer.server.port=14268"

  prometheus:
    hostname: prometheus
    image: prom/prometheus
    networks:
      - internal_net
      - external_net
    volumes:
      - ./prometheus:/etc/prometheus
    ports:
      - 9090:9090
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus`)"
      - "traefik.http.routers.prometheus.entrypoints=web"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  keycloak:
    hostname: keycloak
    image: jboss/keycloak
    networks:
      - internal_net
    environment:
      KEYCLOAK_USER: admin 
      KEYCLOAK_PASSWORD: password 
      KEYCLOAK_IMPORT: /tmp/config/prebuilt-realms.json
    #command: ["-Djboss.socket.binding.port-offset=-8000"]
    volumes:
      - ./keycloak:/tmp/config/
    ports:
      - 8080:8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`keycloak`)"
      - "traefik.http.routers.keycloak.entrypoints=keycloak"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"

  inventory:
    hostname: inventory
    image: javahippie/mp-demo-inventory:0.1.1
    networks:
      - internal_net
    environment:
      JAEGER_SAMPLER_TYPE: const
      JAEGER_SAMPLER_PARAM: 1
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
      KEYCLOAK_JWKS: http://keycloak:8080/auth/realms/MicroProfile/protocol/openid-connect/certs 
      KEYCLOAK_ISSUER: http://keycloak:8080/auth/realms/MicroProfile
    ports:
      - 9081:9081
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.inventory.rule=Host(`inventory`)"
      - "traefik.http.routers.inventory.entrypoints=web"
      - "traefik.http.services.inventory.loadbalancer.server.port=9081"

  pricing:
    hostname: pricing
    networks: 
      - internal_net
    image: javahippie/mp-demo-pricing:0.1.1
    environment:
      JAEGER_SAMPLER_TYPE: const
      JAEGER_SAMPLER_PARAM: 1
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
      KEYCLOAK_JWKS: http://keycloak:8080/auth/realms/MicroProfile/protocol/openid-connect/certs
      KEYCLOAK_ISSUER: http://keycloak:8080/auth/realms/MicroProfile
    ports:
      - 9082:9082
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pricing.rule=Host(`pricing`)"
      - "traefik.http.routers.pricing.entrypoints=web"
      - "traefik.http.services.pricing.loadbalancer.server.port=9082"

networks:
  internal_net:
    internal: true
  external_net:
       
